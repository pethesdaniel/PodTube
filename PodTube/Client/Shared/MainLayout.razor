@using PodTube.Client.Components.Shared
@using PodTube.Client.Services;
@using PodTube.Shared.Models.DTO;
@inject LoginService LoginService;
@inject TokenService TokenService;
@inherits LayoutComponentBase

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<CascadingValue Value="@IsLoggedIn">
    <MudLayout>
        <MudAppBar Elevation="1">
            <ShowLoggedIn>
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            </ShowLoggedIn>
            <MenuBar></MenuBar>
        </MudAppBar>
        <ShowLoggedIn>
            <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
                <NavMenu></NavMenu>
            </MudDrawer>
        </ShowLoggedIn>

        <MudMainContent Style="height: 99vh;">
            <MudContainer>
                @Body
            </MudContainer>
        </MudMainContent>
    </MudLayout>
</CascadingValue>

@code {
    bool _drawerOpen = true;

    bool IsLoggedIn = false;

    protected override async Task OnInitializedAsync() {
        await TokenService.LoadTokenFromPersistentStorage();
        IsLoggedIn = LoginService.IsLoggedIn;
        await base.OnInitializedAsync();
    }

    void DrawerToggle() {
        _drawerOpen = !_drawerOpen;
    }
}